<!doctype html>
<html data-wf-page="6888d108d478b2446d70ba73" data-wf-site="6888d102d478b2446d70b62e" lang="{{ request.locale.iso_code }}">
<head>
  <meta charset="utf-8">
  <title>{{ page_title }}</title>
  <meta content="{{ page_description }}" name="description">
  <meta content="{{ page_title }}" property="og:title">
  <meta content="{{ page_description }}" property="og:description">
  <meta content="{{ page_title }}" property="twitter:title">
  <meta content="{{ page_description }}" property="twitter:description">
  <meta property="og:type" content="website">
  <meta content="summary_large_image" name="twitter:card">
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <meta content="Webflow" name="generator">
  <link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
  <link href="{{ 'webflow.css' | asset_url }}" rel="stylesheet" type="text/css">
  <link href="{{ 'adult-attire.webflow.css' | asset_url }}" rel="stylesheet" type="text/css">
  <script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
  
            {% if settings.favicon == blank %}
              <link href="{{ 'favicon.png' | asset_url }}" rel="shortcut icon" type="image/x-icon">
            {% else %}
              <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
            {% endif %}
        
  
            {% if settings.apple_touch_icon == blank %}
              <link href="{{ 'webclip.png' | asset_url }}" rel="apple-touch-icon">
            {% else %}
              <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
            {% endif %}
        
  <style>
  /* Base transition so the incoming view already has it */
  .main-wrapper,
  footer.section_footer,
  footer[li-section="footer"] {
    transition: opacity 1s;
  }
  /* Swup states */
  html.is-leaving .main-wrapper,
  html.is-leaving footer.section_footer,
  html.is-leaving footer[li-section="footer"],
  html.is-rendering .main-wrapper,
  html.is-rendering footer.section_footer,
  html.is-rendering footer[li-section="footer"] {
    opacity: 0;
  }
  /* Keep pointer/cursor rules minimal */
  html.is-leaving { cursor: wait; pointer-events: none; }
  html.is-rendering { cursor: auto; pointer-events: auto; }
  /* &ldquo;Shop&rdquo; underline when on product pages */
  .menu_link.is-current-shop { text-decoration: underline !important; }
</style>
  <!--  Alpine Focus Plugin  -->
  <script defer="" src="https://cdn.jsdelivr.net/npm/@alpinejs/focus@3.x.x/dist/cdn.min.js"></script>
  <!--  Alpine JS  -->
  <script defer="" src="{{ 'alpinejs3.js' | asset_url }}"></script>
  <!--  Liquify Pro Debugger  -->
  <script defer="" auto="" min="" src="https://cdn.jsdelivr.net/gh/liquify-pro/core@latest/script.js"></script>
  <link href="{{ canonical_url }}" rel="canonical">
  {% if page_image %}
  <meta property="og:image" content="http:{{ page_image | image_url }}">
  <meta property="og:image:secure_url" content="https:{{ page_image | image_url }}">
  <meta property="og:image:width" content="{{ page_image.width }}">
  <meta property="og:image:height" content="{{ page_image.height }}">
{% endif %}
  {% case template.name %}
  {% when product %}
<script type="application/ld+json">
  {{ product | structured_data }}
</script>
{% when article %}
<script type="application/ld+json">
  {{ article | structured_data }}
</script>
{% when collection %}
<script type="application/ld+json">
                  {
                     "@context":"http:\/\/schema.org",
                     "@type":"WebPage",
                     "url":"{{ shop.url }}",
                     "mainEntity":{"@type":"offerCatalog",
                     "name": "{{ collection.title }}",
                     "url": "{{ collection.url }}",
                     "numberOfItems":{{ collection.products.size }}}
              }
</script>
{% endcase %}
{% assign min_price = null %}
{% assign max_price = 0 %}
{% for product in collections.all-products.products %}
  {% for variant in product.variants %}
    {% assign price = variant.price | money_without_currency | replace: ',', '.' | plus: 0 %}
    {% if min_price == null or price < min_price %}
      {% assign min_price = price %}
    {% endif %}
    {% if price > max_price %}
      {% assign max_price = price %}
    {% endif %}
  {% endfor %}
{% endfor %}
    <script type="application/ld+json">
      {
        "@context" : "https://schema.org",
        "@type" : "LocalBusiness",
        "mainEntityOfPage" : {
          "@type" : "WebPage",
          "@id" : "{{ shop.url }}"
        },
        "name" : "{{ shop.name }}",
        "telephone" : "{{ shop.phone }}",
        "email" : "{{ shop.email }}",
        "priceRange" : "{{ min_price | money }} - {{ max_price | money }}",
        "address" : {
          "@type" : "PostalAddress",
          "streetAddress" : "{{ shop.address.address1 }}",
          "addressLocality" : "{{ shop.address.city }}",
          "addressRegion" : "{{ shop.address.province }}",
          "addressCountry" : "{{ shop.address.country_code }}",
          "postalCode" : "{{ shop.address.zip }}"
        },
        "url" : "{{ shop.url }}"
      }
    </script>
  <style>
  /* AlpineJS can cause a brief &ldquo;blip&rdquo; where uninitialized templates flash before it loads. x-cloak prevents this by hiding elements until Alpine is ready. Learn more: https://alpinejs.dev/directives/cloak */
  [x-cloak] { display: none !important; }
  /* The li-cloak tag is removed during conversion. It&rsquo;s useful for hiding elements in the Webflow Designer to make editing easier. Learn more: https://www.liquify.pro/docu/getting-started#li-cloak */  
  [li-cloak_disabled] { display: none !important; }
  /* Setup Font and Background Color if Text is selected */
  ::selection {
    color: #FFFFFF;
    background: #000000;
  }
  ::-moz-selection {
    color: #FFFFFF;
    background: #000000;
  }
</style>
  <style>
html.lenis {
  height: auto;
}
.lenis.lenis-smooth {
  scroll-behavior: auto;
}
.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}
.lenis.lenis-stopped {
  overflow: hidden;
}  
</style>
  <style>
.form_input:-webkit-autofill {
    background-color: transparent !important;
    border-radius: 0rem;
}
input:-webkit-autofill {
    background-color: transparent !important;
	border-radius: 0rem;
}
input:-webkit-autofill {
  -webkit-box-shadow: inset 0 0 0px 9999px var(--_adult---adult-off-white);
-webkit-text-fill-color: var(--_adult---adult-red) !important;
}
</style>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <style>
html.shopify-design-mode .shopify-section.logo-wrapper { 
    display: none !important;
  }
</style>
  <style>
  *[tabindex]:focus-visible, input[type="file"]:focus-visible {
    outline: none;
    outline-offset: 0.125rem;
}
</style>
  <!--  
IMPORTANT: If you want to make changes to the head or body code on this page, 
please remove the `li-layout` tag from the body element. 
This will create a separate layout file for this page, allowing you to apply custom modifications.
Learn more: https://www.liquify.pro/docu/getting-started#template-structure
 -->
<script src="{{ 'li_helper.js' | asset_url }}" type="text/javascript"></script>{{ content_for_header }}</head>
<body li-page="cart">
  <div class="page-wrapper">
    {% render 'global_styles' %}
    {% sections 'header_group' %}
    {{ content_for_layout }}
    {% sections 'footer_group' %}
  </div>
  <script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=6888d102d478b2446d70b62e" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
  <script src="{{ 'webflow.js' | asset_url }}" type="text/javascript"></script>
  <script src="https://cdn.prod.website-files.com/gsap/3.13.0/gsap.min.js" type="text/javascript"></script>
  {% render 'search_javascript' %}
  <!--  Swup libraries  -->
  <script src="https://unpkg.com/swup@4"></script>
  <script src="https://unpkg.com/@swup/scripts-plugin@2"></script>
  <script src="https://unpkg.com/@swup/scroll-plugin@3"></script>
  <!--  Fade CSS: main content + footer (nav/header stay visible)  -->
  <style>
  /* Base transition so the incoming view already has it */
  .main-wrapper,
  footer.section_footer,
  footer[li-section="footer"] {
    transition: opacity 1s;
  }
  /* Swup states */
  html.is-leaving .main-wrapper,
  html.is-leaving footer.section_footer,
  html.is-leaving footer[li-section="footer"],
  html.is-rendering .main-wrapper,
  html.is-rendering footer.section_footer,
  html.is-rendering footer[li-section="footer"] {
    opacity: 0;
  }
  /* Keep pointer/cursor rules minimal */
  html.is-leaving { cursor: wait; pointer-events: none; }
  html.is-rendering { cursor: auto; pointer-events: auto; }
  /* &ldquo;Shop&rdquo; underline when on product pages */
  .menu_link.is-current-shop { text-decoration: underline !important; }
</style>
  <!--  Swup libraries  -->
  <script src="https://unpkg.com/swup@4"></script>
  <script src="https://unpkg.com/@swup/scripts-plugin@2"></script>
  <script src="https://unpkg.com/@swup/scroll-plugin@3"></script>
  <!--  Swup boot + fixes + product-page Shop underline  -->
  <script data-swup-ignore-script="">
(function () {
  var CONTAINER = '.main-wrapper';
  var FOOTER_SEL = 'footer.section_footer, footer[li-section="footer"]';
  function reinitWebflow() {
    try {
      if (window.Webflow && typeof window.Webflow.destroy === 'function') window.Webflow.destroy();
      setTimeout(function () {
        if (window.Webflow && window.Webflow.require) {
          var ix = window.Webflow.require('ix2');
          if (ix && ix.init) ix.init();
        }
      }, 100);
    } catch (e) {}
  }
  function scrollToAnchor() {
    var hash = window.location.hash;
    if (!hash) return;
    var target = document.querySelector(hash);
    if (!target) return;
    setTimeout(function () {
      if (window.lenis) window.lenis.scrollTo(target, { offset: 0 });
      else target.scrollIntoView({ behavior: 'smooth' });
    }, 0);
  }
  /* Ensure the browser registers the initial opacity:0 on incoming view */
  function nudgeReflow() {
    var el = document.querySelector(CONTAINER);
    var ft = document.querySelector(FOOTER_SEL);
    if (el) void el.offsetWidth;
    if (ft) void ft.offsetWidth;
  }
  /* Underline &ldquo;Shop&rdquo; when on /products/... */
  function underlineShopIfProduct() {
    var onProduct = /\/products\//.test(window.location.pathname);
    var links = Array.prototype.slice.call(document.querySelectorAll('.main-nav_link-list .menu_link'));
    links.forEach(function (a) { a.classList.remove('is-current-shop'); });
    if (!onProduct || !links.length) return;
    // Prefer text match &ldquo;Shop&rdquo;, fallback to link to /collections...
    var shopLink = links.find(function (a) {
      return /shop/i.test((a.textContent || '').trim());
    }) || links.find(function (a) {
      try { return a.pathname && a.pathname.indexOf('/collections') > -1; } catch(e) { return false; }
    });
    if (shopLink) shopLink.classList.add('is-current-shop');
  }
  function boot() {
    var el = document.querySelector(CONTAINER);
    if (!el || !window.Swup) return false;
    if (window.swup && typeof window.swup.destroy === 'function') return true; // already booted
    window.swup = new Swup({
      containers: [CONTAINER],
      plugins: [
        new SwupScriptsPlugin({ head: true, body: true }),
        new SwupScrollPlugin({
          doScrollingRightAway: false,
          animateScroll: { betweenPages: false, samePageWithHash: false, samePage: true },
          scrollFriction: 0.3,
          scrollAcceleration: 0.04,
          scrollContainers: "[data-swup-scroll-container]",
          offset: 0,
          markScrollTarget: false,
          getAnchorElement: null,
          shouldResetScrollPosition: function () { return true; }
        })
      ]
    });
    /* Reflow nudge before fade-in, then per-view hooks */
    swup.hooks.on('content:replace', nudgeReflow);
    swup.hooks.on('page:view', function () {
      reinitWebflow();
      scrollToAnchor();
      underlineShopIfProduct();
      // Keep attribute present if you ever switch CSS to [data-swup-container]
      try { el.setAttribute('data-swup-container', ''); } catch (e) {}
    });
    // Initial run
    scrollToAnchor();
    underlineShopIfProduct();
    return true;
  }
  if (!boot()) {
    document.addEventListener('DOMContentLoaded', boot, { once: true });
    var mo = new MutationObserver(function () {
      if (boot()) mo.disconnect();
    });
    mo.observe(document.documentElement, { childList: true, subtree: true });
  }
})();
</script>
  <script data-swup-ignore-script="">
(function () {
  var CONTAINER_SELECTOR = '.main-wrapper'; // not used by IO, but handy if you gate per-page logic
  // Mount once per view
  function mountStickyHeader() {
    // (optional) only run on product pages:
    if (!/\/products\//.test(location.pathname)) return;
    var trigger = document.querySelector('.viewport-trigger');
    var stickyTarget = document.querySelector('.product-header_component');
    var mediaList = document.querySelector('.product-media-list');
    if (!trigger || !stickyTarget || !mediaList) return;
    // prevent double-bind on the same DOM
    if (stickyTarget.dataset.stickyInit === '1') return;
    stickyTarget.dataset.stickyInit = '1';
    // If you ever use a custom scrollable root, set root: document.querySelector('[data-scroll-root]')
    var io = new IntersectionObserver(function (entries) {
      var entry = entries[0];
      if (entry && entry.isIntersecting) {
        stickyTarget.classList.add('sticky');
        mediaList.classList.add('remove-margin');
      } else if (entry && entry.boundingClientRect.top > 0) {
        stickyTarget.classList.remove('sticky');
        mediaList.classList.remove('remove-margin');
      }
    }, { threshold: 0, root: null });
    io.observe(trigger);
    // store for cleanup
    stickyTarget.__stickyIO = io;
  }
  // Cleanup before leaving the page (avoid leaks/duplicates)
  function unmountStickyHeader() {
    document.querySelectorAll('.product-header_component').forEach(function (el) {
      if (el.__stickyIO) {
        try { el.__stickyIO.disconnect(); } catch (e) {}
        delete el.__stickyIO;
      }
      if (el.dataset) delete el.dataset.stickyInit;
    });
  }
  // Initial load
  document.addEventListener('DOMContentLoaded', mountStickyHeader);
  // Swup lifecycle
  if (window.swup?.hooks) {
    swup.hooks.on('page:transitionStart', unmountStickyHeader);
    swup.hooks.on('page:view', mountStickyHeader);
  } else {
    // fallback if hooks API isn&rsquo;t present
    document.addEventListener('swup:contentReplaced', function () {
      unmountStickyHeader();
      mountStickyHeader();
    });
  }
})();
</script>
  <script src="https://unpkg.com/@studio-freight/lenis@1.0.36/dist/lenis.min.js"></script>
  <script>
// LENIS SMOOTH SCROLL
let lenis;
if (Webflow.env("editor") === undefined) {
  lenis = new Lenis({
    lerp: 0.8,
    wheelMultiplier: 1,
    gestureOrientation: "vertical",
    normalizeWheel: false,
    smoothTouch: false
  });
  function raf(time) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }
  requestAnimationFrame(raf);
}
$("[data-lenis-start]").on("click", function () {
  lenis.start();
});
$("[data-lenis-stop]").on("click", function () {
  lenis.stop();
});
$("[data-lenis-toggle]").on("click", function () {
  $(this).toggleClass("stop-scroll");
  if ($(this).hasClass("stop-scroll")) {
    lenis.stop();
  } else {
    lenis.start();
  }
});
</script>
  <script>
function initDynamicCurrentYear() {  
  const currentYear = new Date().getFullYear();
  const currentYearElements = document.querySelectorAll('[data-current-year]');
  currentYearElements.forEach(currentYearElement => {
    currentYearElement.textContent = currentYear;
  });
}
// Initialize Dynamic Current Year
document.addEventListener('DOMContentLoaded', () => {
  initDynamicCurrentYear();
});
</script>
  <script>
document.querySelectorAll('.modal-button').forEach(button => {
  button.addEventListener('click', () => {
    const plus = button.querySelector('.plus');
    const modal = button.nextElementSibling;
    if (!plus || !modal || !modal.classList.contains('modal')) return;
    const isOpen = modal.classList.contains('open');
    // Toggle +/-
    plus.textContent = isOpen ? '+' : '-';
    // Toggle .open class
    modal.classList.toggle('open');
    // Remove leftover inline styles if closing
    if (isOpen) {
      modal.removeAttribute('style');
    }
  });
});
</script>
  <script>
/**
 * Mini-cart plural fixer
 * - Handles multiple instances under the same parent
 * - Updates on Alpine's `carttotalitems` window event
 * - Re-inits on Swup navigations (v2 + v3)
 * - Cleans up observers to avoid leaks/duplicates
 */
// If re-injected (e.g., via Swup), tear down previous run
if (window.__pluralFix && window.__pluralFix.teardown) window.__pluralFix.teardown();
(function () {
  const state = { observers: [], pairs: [], handler: null, swup2: null, swup3: null };
  function getCount(el) {
    const m = (el.textContent || '').match(/\d+/);
    return m ? parseInt(m[0], 10) : 0;
  }
  function setPluralDisplay(pluralEl, hide) {
    if (!pluralEl) return;
    if (hide) {
      pluralEl.style.display = 'none';
    } else {
      // Let CSS decide when not singular
      pluralEl.style.removeProperty('display');
    }
  }
  function updatePair(countEl, pluralEl) {
    const n = getCount(countEl);
    setPluralDisplay(pluralEl, n === 1);
  }
  // Pair each count with the nearest following sibling that contains .cart-plural
  function makePairs(root) {
    const pairs = [];
    const counts = root.querySelectorAll('[li-element="mini-cart-item-count"]');
    counts.forEach((countEl) => {
      let pluralEl = null;
      // Walk forward through siblings until we find a .cart-plural
      let sib = countEl.nextElementSibling;
      while (sib && !pluralEl) {
        const found = sib.querySelector && sib.querySelector('.cart-plural');
        if (found) pluralEl = found;
        sib = found ? null : sib.nextElementSibling;
      }
      // Fallback: any .cart-plural after the count within the same parent
      if (!pluralEl && countEl.parentElement) {
        const plurals = Array.from(countEl.parentElement.querySelectorAll('.cart-plural'));
        pluralEl = plurals.find(pl => (pl.compareDocumentPosition(countEl) & Node.DOCUMENT_POSITION_PRECEDING) !== 0) || null;
      }
      if (pluralEl) pairs.push({ countEl, pluralEl });
    });
    return pairs;
  }
  function observePair(countEl, pluralEl) {
    const mo = new MutationObserver(() => updatePair(countEl, pluralEl));
    mo.observe(countEl, { childList: true, characterData: true, subtree: true });
    state.observers.push(mo);
  }
  function disconnectAll() {
    state.observers.forEach(o => o.disconnect());
    state.observers = [];
  }
  function init(root = document) {
    disconnectAll();
    state.pairs = makePairs(root);
    if (!state.pairs.length) return;
    state.pairs.forEach(({ countEl, pluralEl }) => {
      updatePair(countEl, pluralEl);
      observePair(countEl, pluralEl);
    });
    // Recalculate after Alpine dispatches carttotalitems (x-text update happens first)
    if (!state.handler) {
      state.handler = () => setTimeout(() => {
        state.pairs.forEach(({ countEl, pluralEl }) => updatePair(countEl, pluralEl));
      }, 0);
      window.addEventListener('carttotalitems', state.handler, { passive: true });
    }
  }
  function refresh() {
    disconnectAll();
    state.pairs = makePairs(document);
    state.pairs.forEach(({ countEl, pluralEl }) => {
      updatePair(countEl, pluralEl);
      observePair(countEl, pluralEl);
    });
  }
  function teardown() {
    disconnectAll();
    if (state.handler) window.removeEventListener('carttotalitems', state.handler);
    state.handler = null;
    // Remove Swup hooks
    if (state.swup2) document.removeEventListener('swup:contentReplaced', state.swup2);
    if (state.swup3) document.removeEventListener('swup:page:view', state.swup3);
    state.swup2 = state.swup3 = null;
    state.pairs = [];
  }
  // Expose debug helpers if you need them
  window.__pluralFix = { refresh, teardown };
  // Init now
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => init(document));
  } else {
    init(document);
  }
  // Swup (v2 + v3): re-init after page changes
  state.swup2 = () => init(document);
  state.swup3 = () => init(document);
  document.addEventListener('swup:contentReplaced', state.swup2); // v2
  document.addEventListener('swup:page:view',       state.swup3); // v3
})();
</script>
  <script>
  document.addEventListener("DOMContentLoaded", () => {
    const openTrigger = document.querySelector("#openLogin");
    const closeTrigger = document.querySelector("#closeLogin");
    const target = document.querySelector(".section_under-construction");
    if (openTrigger && target) {
      openTrigger.addEventListener("click", (e) => {
        e.preventDefault();
        target.classList.add("open");
      });
    }
    if (closeTrigger && target) {
      closeTrigger.addEventListener("click", (e) => {
        e.preventDefault();
        target.classList.remove("open");
      });
    }
  });
</script>
  <style>
  /* Minimal body lock (no visual effects) */
  body._lock {
    position: fixed;
    inset: 0 auto auto 0; /* top/left fixed without forcing width styles */
    width: 100%;
    overflow: hidden; /* safety for desktop browsers */
  }
</style>
  <script>
document.addEventListener('DOMContentLoaded', () => {
  // Elements
  const body = document.body;
  const mobileBg = document.querySelector('.mobile-menu-background');
  const mobileAboutBg = document.querySelector('.mobile-about-background');
  const cartDropdown = document.querySelector('.nav_mini-cart-holder.w-dropdown-list'); // list
  const aboutWrapper = document.querySelector('.about_component-wrapper');
  const aboutBtn = document.getElementById('aboutBtn');
  const closeBtn = document.getElementById('closeAbout');
  const modalBg = document.getElementById('bgcloseAbout');
  // Early exit if core pieces are missing
  if (!cartDropdown || !aboutWrapper) return;
  // Cart root/toggle (for reliably closing Webflow dropdown)
  const cartRoot = cartDropdown.closest('.w-dropdown') || cartDropdown.parentElement;
  const cartToggle = cartRoot ? cartRoot.querySelector('.w-dropdown-toggle') : null;
  // --- Body lock helpers (prevents layout jump, restores on unlock) ---
  let scrollYBeforeLock = 0;
  function lockBody() {
    if (body.classList.contains('_lock')) return;
    scrollYBeforeLock = window.scrollY || window.pageYOffset || 0;
    body.style.top = `-${scrollYBeforeLock}px`;
    body.classList.add('_lock');
  }
  function unlockBody() {
    if (!body.classList.contains('_lock')) return;
    body.classList.remove('_lock');
    const y = scrollYBeforeLock || 0;
    body.style.top = '';
    window.scrollTo(0, y);
  }
  // --- Cart helpers ---
  function isCartOpen() {
    return cartDropdown.classList.contains('w--open');
  }
  function closeCart() {
    cartDropdown.classList.remove('w--open');
    cartToggle?.classList.remove('w--open');
    cartToggle?.setAttribute('aria-expanded', 'false');
  }
  // --- About controls (toggle + close helpers) ---
  function openAbout() {
    // Mutual exclusivity: close cart if it's open
    if (isCartOpen()) closeCart();
    aboutWrapper.classList.add('open');
    aboutBtn?.setAttribute('aria-expanded', 'true');
    updateState();
  }
  function closeAbout() {
    aboutWrapper.classList.remove('open');
    aboutBtn?.setAttribute('aria-expanded', 'false');
    updateState();
  }
  function toggleAbout() {
    if (aboutWrapper.classList.contains('open')) closeAbout(); else openAbout();
  }
  // Events for About
  aboutBtn?.addEventListener('click', (e) => {
    e.preventDefault();
    toggleAbout();
  });
  closeBtn?.addEventListener('click', (e) => {
    e.preventDefault();
    closeAbout();
  });
  modalBg?.addEventListener('click', () => {
    closeAbout();
  });
  // --- ESC key support for About modal ---
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' || e.key === 'Esc') {
      if (aboutWrapper.classList.contains('open')) {
        closeAbout();
      }
    }
  });
  // --- Mobile background updaters ---
  function updateMobileBg() {
    if (!mobileBg) return;
    if (window.innerWidth < 767 && isCartOpen()) {
      mobileBg.classList.add('open');
    } else {
      mobileBg.classList.remove('open');
    }
  }
  function updateMobileAboutBg() {
    if (!mobileAboutBg) return;
    if (aboutWrapper.classList.contains('open')) {
      mobileAboutBg.classList.add('open');
    } else {
      mobileAboutBg.classList.remove('open');
    }
  }
  // --- Central state updater: decides body lock based on About/Cart ---
  function updateState() {
    // If cart opens (by user), ensure About closes and About bg closes (mutual exclusivity)
    if (isCartOpen()) {
      aboutWrapper.classList.remove('open');
      aboutBtn?.setAttribute('aria-expanded', 'false');
      mobileAboutBg?.classList.remove('open');
    }
    // Lock body if either is open
    if (aboutWrapper.classList.contains('open') || isCartOpen()) {
      lockBody();
    } else {
      unlockBody();
    }
    // Maintain backgrounds
    updateMobileBg();
    updateMobileAboutBg();
  }
  // Observe cart open/close (class changes from Webflow)
  const observer = new MutationObserver(updateState);
  observer.observe(cartDropdown, { attributes: true, attributeFilter: ['class'] });
  // Keep things consistent on resize
  window.addEventListener('resize', updateState);
  // Initial sync
  updateState();
});
</script>
  <script>
document.addEventListener('DOMContentLoaded', function () {
  console.log('&#9989; DOM fully loaded');
  const url = window.location.href;
  console.log('&#127760; Current URL:', url);
  // Restore scroll position if returning to success page
  if (url.includes('?customer_posted=true#contact_form')) {
    const savedScroll = sessionStorage.getItem('scrollPosition');
    if (savedScroll) {
      window.scrollTo(0, parseInt(savedScroll, 10));
      console.log('&#128205; Scroll position restored to', savedScroll);
      sessionStorage.removeItem('scrollPosition'); // clean up
    }
  }
  // 1. Show success state if form submitted
  if (url.includes('?customer_posted=true#contact_form')) {
    console.log('&#127881; Success form submission detected via URL');
    const footerFormInitialState = document.querySelector('.footer-form-initial-state');
    const footerFormSuccessState = document.querySelector('.footer-form-succes-state');
    if (footerFormInitialState) {
      footerFormInitialState.classList.add('succes');
      console.log('&#9989; .succes class added to .footer-form-initial-state');
    }
    if (footerFormSuccessState) {
      footerFormSuccessState.classList.add('succes');
      console.log('&#9989; .succes class added to .footer-form-succes-state');
    }
    const newsletterElements = document.querySelectorAll('[hs-newsletter-show]');
    if (newsletterElements.length > 0) {
      newsletterElements.forEach(el => {
        el.style.display = 'flex';
      });
      console.log(`&#128236; ${newsletterElements.length} newsletter element(s) shown`);
    } else {
      console.log('&#8505;&#65039; No [hs-newsletter-show] elements found');
    }
  }
  // 2. Input formatting &mdash; name & last name (capitalize), email (remove spaces)
  const generalIds = ['name', 'last_name'];
  generalIds.forEach(function (id) {
    const input = document.getElementById(id);
    if (input) {
      input.addEventListener('input', function (e) {
        let val = e.target.value.trim().replace(/\s+/g, '');
        e.target.value = val.charAt(0).toUpperCase() + val.slice(1).toLowerCase();
        console.log(`&#9997;&#65039; Formatting input: #${id} &rarr; "${e.target.value}"`);
      });
    } else {
      console.warn(`&#9888;&#65039; Input field #${id} not found`);
    }
  });
  const emailIds = ['email'];
  emailIds.forEach(function (id) {
    const input = document.getElementById(id);
    if (input) {
      input.addEventListener('input', function (e) {
        e.target.value = e.target.value.trim().replace(/\s+/g, '');
        console.log(`&#9997;&#65039; Formatting email input: #${id} &rarr; "${e.target.value}"`);
      });
    } else {
      console.warn(`&#9888;&#65039; Email input field #${id} not found`);
    }
  });
});
// Save scroll position before navigating away
window.addEventListener('beforeunload', function () {
  sessionStorage.setItem('scrollPosition', window.scrollY);
});
</script>
  <script>
document.addEventListener('DOMContentLoaded', function () {
  const url = window.location.href;
  // --- Utilities ---
  function restoreScroll(anchor) {
    if (url.includes(`?customer_posted=true#${anchor}`)) {
      const savedScroll = sessionStorage.getItem('scrollPosition');
      if (savedScroll) {
        window.scrollTo(0, parseInt(savedScroll, 10));
        sessionStorage.removeItem('scrollPosition');
      }
    }
  }
  function handleSuccess(anchor, selectors) {
    if (url.includes(`?customer_posted=true#${anchor}`)) {
      const initialEl = document.querySelector(selectors.initial);
      const successEl = document.querySelector(selectors.success);
      if (initialEl) initialEl.classList.add('succes');
      if (successEl) successEl.classList.add('succes');
    }
  }
  // --- Newsletter / footer form ---
  restoreScroll('contact_form');
  handleSuccess('contact_form', {
    initial: '.footer-form-initial-state',
    success: '.footer-form-succes-state'
  });
  // --- Contact form ---
  restoreScroll('wf-form-Contact-Form');
  handleSuccess('wf-form-Contact-Form', {
    initial: '.contact-form-wrapper',
    success: '.contact-form-succes-state'
  });
  // --- Input formatting (shared) ---
  const generalIds = ['name', 'last_name'];
  generalIds.forEach(function (id) {
    const input = document.getElementById(id);
    if (input) {
      input.addEventListener('input', function (e) {
        let val = e.target.value.trim().replace(/\s+/g, '');
        e.target.value = val.charAt(0).toUpperCase() + val.slice(1).toLowerCase();
      });
    }
  });
  const emailIds = ['email'];
  emailIds.forEach(function (id) {
    const input = document.getElementById(id);
    if (input) {
      input.addEventListener('input', function (e) {
        e.target.value = e.target.value.trim().replace(/\s+/g, '');
      });
    }
  });
});
// Save scroll before leaving
window.addEventListener('beforeunload', function () {
  sessionStorage.setItem('scrollPosition', window.scrollY);
});
</script>
  <script>
(function () {
  function getToggle() {
    return document.querySelector('[li-element="mini-cart-toggle"]') 
        || document.getElementById('w-dropdown-toggle-0');
  }
  function simulateClick(el) {
    // Fire a full click sequence for stubborn handlers
    try { el.dispatchEvent(new MouseEvent('pointerdown', { bubbles: true, cancelable: true, view: window })); } catch (e) {}
    el.dispatchEvent(new MouseEvent('mousedown',   { bubbles: true, cancelable: true, view: window }));
    el.dispatchEvent(new MouseEvent('mouseup',     { bubbles: true, cancelable: true, view: window }));
    el.dispatchEvent(new MouseEvent('click',       { bubbles: true, cancelable: true, view: window }));
  }
  function tryClickOnce() {
    var el = getToggle();
    if (!el) return false;
    simulateClick(el);
    return true;
  }
  function run() {
    // Give Webflow a tick to bind its listeners, then click
    requestAnimationFrame(function () {
      if (tryClickOnce()) return;
      // If the header/toggle mounts late, observe briefly
      var mo = new MutationObserver(function () {
        if (tryClickOnce()) { mo.disconnect(); }
      });
      mo.observe(document.documentElement, { childList: true, subtree: true });
      setTimeout(function(){ try { mo.disconnect(); } catch(e){} }, 5000);
    });
  }
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', run);
  } else {
    run();
  }
  // If you use Swup, also click after content swap:
  document.addEventListener('swup:contentReplaced', function () { run(); });
})();
</script>
</body>
</html>